{"ast":null,"code":"import _slicedToArray from \"D:\\\\Users\\\\John\\\\Documents\\\\CPSC 349\\\\front-end-dev-book\\\\tic-tac-toe-react\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Users\\\\John\\\\Documents\\\\CPSC 349\\\\front-end-dev-book\\\\tic-tac-toe-react\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      boardsize: 3,\n      stepNumber: 0,\n      xIsNext: true,\n      history: [{\n        squares: Array(9).fill(null)\n      }]\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      boardsize: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(event.target.value);\n    this.setState({\n      boardsize: event.target.value\n    });\n    this.setState({\n      stepNumber: 0\n    });\n    let boardLength = event.target.value * event.target.value;\n    console.log(boardLength);\n    console.log(typeof boardLength);\n    this.setState({\n      history: [{\n        squares: Array(boardLength).fill(null)\n      }]\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        lastCoords: i\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const lastCoords = step.lastCoords;\n      const col = 1 + lastCoords % this.state.boardsize;\n      const row = 1 + Math.floor(lastCoords / this.state.boardsize);\n      const desc = move ? \"Go to move #\".concat(move, \" (\").concat(col, \", \").concat(row, \")\") : 'Go to game start';\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"sizeform\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Board Size:\", React.createElement(\"input\", {\n      type: \"number\",\n      name: \"name\",\n      defaultValue: this.state.boardsize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, moves)));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["D:/Users/John/Documents/CPSC 349/front-end-dev-book/tic-tac-toe-react/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","Game","constructor","handleSubmit","bind","state","boardsize","stepNumber","xIsNext","history","Array","fill","handleChange","event","setState","target","preventDefault","console","log","boardLength","handleClick","slice","current","length","calculateWinner","concat","lastCoords","jumpTo","step","winner","moves","map","move","col","row","Math","floor","desc","status","onSubmit","document","getElementById","lines","a","b","c"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,SACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEA,KAAK,CAACC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,KADT,CADF;AAKD;;AAED,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAElCC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZ,WACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,OAAX,CAAmBD,CAAnB,CADT;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWC,OAAX,CAAmBK,CAAnB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAEHE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CADF,EAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CANF,EAWE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CAXF,CADF;AAmBD;;AA/BiC;;AAkCpC,MAAMI,IAAN,SAAmBZ,KAAK,CAACO,SAAzB,CAAmC;AACjCM,EAAAA,WAAW,CAACV,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKW,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,CADA;AAEXC,MAAAA,UAAU,EAAE,CAFD;AAGXC,MAAAA,OAAO,EAAE,IAHE;AAIXC,MAAAA,OAAO,EAAE,CAAC;AACRV,QAAAA,OAAO,EAACW,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADA,OAAD;AAJE,KAAb;AAQD;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAACR,MAAAA,SAAS,EAAEO,KAAK,CAACE,MAAN,CAAarB;AAAzB,KAAd;AACD;;AAEDS,EAAAA,YAAY,CAACU,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACG,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACE,MAAN,CAAarB,KAAzB;AACA,SAAKoB,QAAL,CAAc;AAACR,MAAAA,SAAS,EAAEO,KAAK,CAACE,MAAN,CAAarB;AAAzB,KAAd;AACA,SAAKoB,QAAL,CAAc;AAACP,MAAAA,UAAU,EAAE;AAAb,KAAd;AACA,QAAIY,WAAW,GAAGN,KAAK,CAACE,MAAN,CAAarB,KAAb,GAAqBmB,KAAK,CAACE,MAAN,CAAarB,KAApD;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOC,WAAnB;AACA,SAAKL,QAAL,CAAc;AAACL,MAAAA,OAAO,EAAE,CAAC;AACvBV,QAAAA,OAAO,EAACW,KAAK,CAACS,WAAD,CAAL,CAAmBR,IAAnB,CAAwB,IAAxB;AADe,OAAD;AAAV,KAAd;AAGD;;AAEDS,EAAAA,WAAW,CAACtB,CAAD,EAAI;AACb,UAAMW,OAAO,GAAG,KAAKJ,KAAL,CAAWI,OAAX,CAAmBY,KAAnB,CAAyB,CAAzB,EAA4B,KAAKhB,KAAL,CAAWE,UAAX,GAAwB,CAApD,CAAhB;AACA,UAAMe,OAAO,GAAGb,OAAO,CAACA,OAAO,CAACc,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMxB,OAAO,GAAGuB,OAAO,CAACvB,OAAR,CAAgBsB,KAAhB,EAAhB;;AACA,QAAIG,eAAe,CAACzB,OAAD,CAAf,IAA4BA,OAAO,CAACD,CAAD,CAAvC,EAA4C;AAC1C;AACD;;AACDC,IAAAA,OAAO,CAACD,CAAD,CAAP,GAAa,KAAKO,KAAL,CAAWG,OAAX,GAAqB,GAArB,GAA2B,GAAxC;AACA,SAAKM,QAAL,CAAc;AACZL,MAAAA,OAAO,EAAEA,OAAO,CAACgB,MAAR,CAAe,CAAC;AACvB1B,QAAAA,OAAO,EAAEA,OADc;AAEvB2B,QAAAA,UAAU,EAAE5B;AAFW,OAAD,CAAf,CADG;AAKZS,MAAAA,UAAU,EAAEE,OAAO,CAACc,MALR;AAMZf,MAAAA,OAAO,EAAE,CAAC,KAAKH,KAAL,CAAWG;AANT,KAAd;AAQD;;AAEDmB,EAAAA,MAAM,CAACC,IAAD,EAAO;AACZ,SAAKd,QAAL,CAAc;AACZP,MAAAA,UAAU,EAAEqB,IADA;AAEZpB,MAAAA,OAAO,EAAGoB,IAAI,GAAG,CAAR,KAAe;AAFZ,KAAd;AAID;;AAEA5B,EAAAA,MAAM,GAAG;AACP,UAAMS,OAAO,GAAG,KAAKJ,KAAL,CAAWI,OAA3B;AACA,UAAMa,OAAO,GAAGb,OAAO,CAAC,KAAKJ,KAAL,CAAWE,UAAZ,CAAvB;AACA,UAAMsB,MAAM,GAAGL,eAAe,CAACF,OAAO,CAACvB,OAAT,CAA9B;AAEA,UAAM+B,KAAK,GAAGrB,OAAO,CAACsB,GAAR,CAAY,CAACH,IAAD,EAAOI,IAAP,KAAgB;AACxC,YAAMN,UAAU,GAAGE,IAAI,CAACF,UAAxB;AACA,YAAMO,GAAG,GAAG,IAAIP,UAAU,GAAG,KAAKrB,KAAL,CAAWC,SAAxC;AACA,YAAM4B,GAAG,GAAG,IAAIC,IAAI,CAACC,KAAL,CAAWV,UAAU,GAAG,KAAKrB,KAAL,CAAWC,SAAnC,CAAhB;AACA,YAAM+B,IAAI,GAAGL,IAAI,yBACAA,IADA,eACSC,GADT,eACiBC,GADjB,SAEf,kBAFF;AAGA,aACE;AAAI,QAAA,GAAG,EAAEF,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKL,MAAL,CAAYK,IAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2CK,IAA3C,CADF,CADF;AAKD,KAZa,CAAd;AAeA,QAAIC,MAAJ;;AACA,QAAIT,MAAJ,EAAY;AACVS,MAAAA,MAAM,GAAG,aAAaT,MAAtB;AACD,KAFD,MAEO;AACNS,MAAAA,MAAM,GAAG,mBAAmB,KAAKjC,KAAL,CAAWG,OAAX,GAAqB,GAArB,GAA2B,GAA9C,CAAT;AACA;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,SAAS,EAAC,UAAhB;AAA2B,MAAA,QAAQ,EAAE,KAAK+B,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,YAAY,EAAE,KAAKlC,KAAL,CAAWC,SAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAQE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADA,EAWE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACA,MAAA,OAAO,EAAEgB,OAAO,CAACvB,OADjB;AAEA,MAAA,OAAO,EAAGD,CAAD,IAAO,KAAKsB,WAAL,CAAiBtB,CAAjB,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXF,EAiBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMwC,MAAN,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKR,KAAL,CAFF,CAjBF,CADF;AAwBD;;AA3GgC,C,CA8GnC;;;AAEAxC,QAAQ,CAACU,MAAT,CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEwC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;;AAKA,SAASjB,eAAT,CAAyBzB,OAAzB,EAAkC;AAChC,QAAM2C,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,OAAK,IAAI5C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4C,KAAK,CAACnB,MAA1B,EAAkCzB,CAAC,EAAnC,EAAuC;AAAA,oCACnB4C,KAAK,CAAC5C,CAAD,CADc;AAAA,UAC9B6C,CAD8B;AAAA,UAC3BC,CAD2B;AAAA,UACxBC,CADwB;;AAErC,QAAI9C,OAAO,CAAC4C,CAAD,CAAP,IAAc5C,OAAO,CAAC4C,CAAD,CAAP,KAAe5C,OAAO,CAAC6C,CAAD,CAApC,IAA2C7C,OAAO,CAAC4C,CAAD,CAAP,KAAe5C,OAAO,CAAC8C,CAAD,CAArE,EAA0E;AACxE,aAAO9C,OAAO,CAAC4C,CAAD,CAAd;AACD;AACF;;AACD,SAAO,IAAP;AACD","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n      return (\r\n        <Square\r\n          value={this.props.squares[i]}\r\n          onClick={() => this.props.onClick(i)}\r\n        />\r\n      );\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = {\r\n      boardsize: 3,\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      history: [{\r\n        squares:Array(9).fill(null),\r\n      }],\r\n    };\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({boardsize: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(event.target.value);\r\n    this.setState({boardsize: event.target.value});\r\n    this.setState({stepNumber: 0});\r\n    let boardLength = event.target.value * event.target.value;\r\n    console.log(boardLength);\r\n    console.log(typeof boardLength);\r\n    this.setState({history: [{\r\n      squares:Array(boardLength).fill(null),\r\n    }],});\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        lastCoords: i\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n   this.setState({\r\n     stepNumber: step,\r\n     xIsNext: (step % 2) === 0,\r\n   });\r\n }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const lastCoords = step.lastCoords;\r\n      const col = 1 + lastCoords % this.state.boardsize;\r\n      const row = 1 + Math.floor(lastCoords / this.state.boardsize);\r\n      const desc = move ?\r\n        `Go to move #${move} (${col}, ${row})` :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n     status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n      <form className=\"sizeform\" onSubmit={this.onSubmit}>\r\n        <label>\r\n          Board Size:\r\n          <input type=\"number\"\r\n            name=\"name\"\r\n            defaultValue={this.state.boardsize}\r\n          />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n        <div className=\"game-board\">\r\n          <Board\r\n          squares={current.squares}\r\n          onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}