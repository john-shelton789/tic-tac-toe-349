{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\John\\\\Documents\\\\CPSC 349\\\\front-end-dev-book\\\\tic-tac-toe-react\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    console.log(this.props.size);\n    let boardsize = this.props.size;\n    let cols = [];\n\n    for (let i = 0; i < boardsize; i++) {\n      let row = [];\n\n      for (let j = 0; j < boardsize; j++) {\n        row.push(this.renderSquare(i * boardsize + j));\n      }\n\n      cols.push(React.createElement(\"div\", {\n        key: i,\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, row));\n    }\n\n    return React.createElement(\"div\", {\n      key: cols,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, cols);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      boardsize: 3,\n      stepNumber: 0,\n      xIsNext: true,\n      history: [{\n        squares: Array(9).fill(null)\n      }]\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      boardsize: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(event.target.size.value);\n    this.setState({\n      boardsize: event.target.size.value\n    });\n    this.setState({\n      stepNumber: 0\n    });\n    let boardLength = event.target.size.value * event.target.size.value;\n    console.log(boardLength);\n    console.log(typeof boardLength);\n    this.setState({\n      history: [{\n        squares: Array(boardLength).fill(null)\n      }]\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        lastCoords: i\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares, this.state.boardsize);\n    const moves = history.map((step, move) => {\n      const lastCoords = step.lastCoords;\n      const col = 1 + lastCoords % this.state.boardsize;\n      const row = 1 + Math.floor(lastCoords / this.state.boardsize);\n      const desc = move ? \"Go to move #\".concat(move, \" (\").concat(col, \", \").concat(row, \")\") : 'Go to game start';\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"sizeform\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Board Size:\", React.createElement(\"input\", {\n      type: \"number\",\n      name: \"size\",\n      defaultValue: this.state.boardsize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      size: this.state.boardsize,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, moves)));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares, boardsize) {\n  let boardlength = boardsize * boardsize;\n  let verticalwin = false;\n  let horizontalwin = false;\n  let diagonalwin = false; //test for vertical win\n\n  for (let i = 0; i < boardsize; i++) {\n    let verticalsquares = [];\n\n    for (let j = i; j < boardlength; j += boardsize) {\n      verticalsquares.push(squares[j]);\n    }\n\n    verticalwin = verticalsquares.every(v => v === verticalsquares[i]);\n    if (verticalwin) return verticalsquares;\n  } //test for horizontal victory\n\n\n  for (let i = 0; i < boardlength; i += boardsize) {\n    let horizontalsquares = [];\n\n    for (let j = 0; j < boardsize; j++) {\n      horizontalsquares.push(squares[j]);\n    }\n\n    horizontalwin = horizontalsquares.every(h => h === horizontalsquares[i]);\n    if (horizontalwin) return horizontalsquares;\n  }\n  /*\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n  \r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n    */\n\n}","map":{"version":3,"sources":["D:/Users/John/Documents/CPSC 349/front-end-dev-book/tic-tac-toe-react/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","console","log","size","boardsize","cols","row","j","push","Game","constructor","handleSubmit","bind","state","stepNumber","xIsNext","history","Array","fill","handleChange","event","setState","target","preventDefault","boardLength","handleClick","slice","current","length","calculateWinner","concat","lastCoords","jumpTo","step","winner","moves","map","move","col","Math","floor","desc","status","document","getElementById","boardlength","verticalwin","horizontalwin","diagonalwin","verticalsquares","every","v","horizontalsquares","h"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n      return (\r\n        <Square\r\n          value={this.props.squares[i]}\r\n          onClick={() => this.props.onClick(i)}\r\n        />\r\n      );\r\n    }\r\n\r\n  render() {\r\n    console.log(this.props.size);\r\n    let boardsize = this.props.size;\r\n    let cols = [];\r\n    for(let i = 0; i < boardsize; i++) {\r\n      let row = [];\r\n      for(let j = 0; j< boardsize; j++) {\r\n        row.push(this.renderSquare(i * boardsize + j));\r\n      }\r\n      cols.push(<div key={i} className=\"board-row\">{row}</div>);\r\n    }\r\n\r\n    return (\r\n    <div key={cols}>{cols}</div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = {\r\n      boardsize: 3,\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      history: [{\r\n        squares:Array(9).fill(null),\r\n      }],\r\n    };\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({boardsize: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(event.target.size.value);\r\n    this.setState({boardsize: event.target.size.value});\r\n    this.setState({stepNumber: 0});\r\n    let boardLength = event.target.size.value * event.target.size.value;\r\n    console.log(boardLength);\r\n    console.log(typeof boardLength);\r\n    this.setState({history: [{\r\n      squares:Array(boardLength).fill(null),\r\n    }],});\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        lastCoords: i\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n   this.setState({\r\n     stepNumber: step,\r\n     xIsNext: (step % 2) === 0,\r\n   });\r\n }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares, this.state.boardsize);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const lastCoords = step.lastCoords;\r\n      const col = 1 + lastCoords % this.state.boardsize;\r\n      const row = 1 + Math.floor(lastCoords / this.state.boardsize);\r\n      const desc = move ?\r\n        `Go to move #${move} (${col}, ${row})` :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n     status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n      <form className=\"sizeform\" onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Board Size:\r\n          <input type=\"number\"\r\n            name=\"size\"\r\n            defaultValue={this.state.boardsize}\r\n          />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n        <div className=\"game-board\">\r\n          <Board\r\n          squares={current.squares}\r\n          size={this.state.boardsize}\r\n          onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares, boardsize) {\r\n\r\nlet boardlength = boardsize * boardsize;\r\n\r\n\r\nlet verticalwin = false;\r\nlet horizontalwin = false;\r\nlet diagonalwin = false;\r\n\r\n//test for vertical win\r\nfor(let i = 0; i < boardsize; i++) {\r\n  let verticalsquares = [];\r\n  for(let j = i; j < boardlength; j += boardsize) {\r\n    verticalsquares.push(squares[j]);\r\n  }\r\n  verticalwin = verticalsquares.every(v => v === verticalsquares[i]);\r\n  if(verticalwin) return verticalsquares;\r\n}\r\n//test for horizontal victory\r\nfor(let i = 0; i < boardlength; i += boardsize) {\r\n  let horizontalsquares = [];\r\n  for(let j = 0; j < boardsize; j++) {\r\n    horizontalsquares.push(squares[j]);\r\n  }\r\n  horizontalwin = horizontalsquares.every(h => h === horizontalsquares[i]);\r\n  if(horizontalwin) return horizontalsquares;\r\n}\r\n\r\n\r\n\r\n/*\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n  */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}